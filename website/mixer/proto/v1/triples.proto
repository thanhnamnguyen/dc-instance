// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option go_package = "./proto";
package datacommons.v1;

import "entity.proto";


// Basic info for a collection of nodes.
message NodeInfoCollection {
  repeated datacommons.EntityInfo nodes = 1;
}

message TriplesRequest {
  string node = 1;
  // Direction can only be "in" and "out"
  string direction = 2;
  // [Optional]
  // The pagination token for getting the next set of entries. This is empty
  // for the first request and needs to be set in the subsequent request.
  // This is the value returned from a prior call to TriplesRequest
  string next_token = 3;
}

message TriplesResponse {
  // Key is property.
  map<string, NodeInfoCollection> triples = 1;
  // The pagination token for getting the next set of entries.
  string next_token = 2;
}


message BulkTriplesRequest {
  repeated string nodes = 1;
  // Direction can only be "in" and "out"
  string direction = 2;
  // [Optional]
  // The pagination token for getting the next set of entries. This is empty
  // for the first request and needs to be set in the subsequent request.
  // This is the value returned from a prior call to BulkTriplesRequest
  string next_token = 3;
}

message BulkTriplesResponse {

  message NodeTriples {
    string node = 1;
    // Key is property.
    map<string, NodeInfoCollection> triples = 2;
  }
  repeated NodeTriples data = 1;
  // The pagination token for getting the next set of entries.
  string next_token = 2;
}