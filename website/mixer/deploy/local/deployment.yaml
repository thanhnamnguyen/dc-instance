# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Mixer Kubernetes Deployment config. (https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
# This is to be extended by the dev/autopush/staging/prod overlay.
# The deployment contains grpc mixer container and esp container that transcodes grpc to JSON.

apiVersion: v1
kind: Namespace
metadata:
  name: mixer
---
apiVersion: v1
kind: Service
metadata:
  name: mixer-service
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8081
      protocol: TCP
  selector:
    app: mixer-grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mixer-grpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mixer-grpc
  template:
    metadata:
      labels:
        app: mixer-grpc
    spec:
      volumes:
        - name: schema-mapping
          configMap:
            name: schema-mapping
        - name: mixer-grpc-json
          emptyDir: {}
      containers:
        - name: mixer
          image: datacommons/mixer
          imagePullPolicy: Never
          resources:
            limits:
              memory: "8G"
            requests:
              memory: "8G"
          args:
            - --base_bigtable_info=$(BASE_BIGTABLE_INFO)
            - --custom_bigtable_info=$(CUSTOM_BIGTABLE_INFO)
            - --mixer_project=$(MIXER_PROJECT)
            - --bq_dataset=$(BIG_QUERY)
            - --schema_path=/datacommons/mapping
          volumeMounts:
            - name: schema-mapping
              mountPath: /datacommons/mapping
          env:
            - name: MIXER_PROJECT
              valueFrom:
                configMapKeyRef:
                  name: mixer-configmap
                  key: mixerProject
            - name: BIG_QUERY
              valueFrom:
                configMapKeyRef:
                  name: store-configmap
                  key: bigquery.version
            - name: BASE_BIGTABLE_INFO
              valueFrom:
                configMapKeyRef:
                  name: store-configmap
                  key: base_bigtable_info.yaml
            - name: CUSTOM_BIGTABLE_INFO
              valueFrom:
                configMapKeyRef:
                  name: store-configmap
                  key: custom_bigtable_info.yaml
          ports:
            - containerPort: 12345
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            periodSeconds: 10
            failureThreshold: 30
        - name: esp
          image: gcr.io/endpoints-release/endpoints-runtime:1
          args:
            - --service_json_path=/esp/mixer-grpc.json
            - --http_port=8081
            - --backend=grpc://127.0.0.1:12345
            - --cors_preset=basic
            - --rollout_strategy=managed
            - --healthz=healthz
            - --non_gcp
          volumeMounts:
            - mountPath: /esp
              name: mixer-grpc-json
          env:
            - name: SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: mixer-configmap
                  key: serviceName
          resources:
            limits:
              memory: "1G"
            requests:
              memory: "1G"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 5
            initialDelaySeconds: 10
          ports:
            - containerPort: 8081
        - name: api-compiler
          image: datacommons/api-compiler
          imagePullPolicy: Never
          command: ["/bin/sh"]
          args:
            - "-c"
            - >
              cp /output/mixer-grpc.json /esp/ &&
              while true; do
                echo "api-compiler running"
                sleep 3600;
              done
          resources:
            limits:
              memory: "0.1G"
            requests:
              memory: "0.1G"
          volumeMounts:
            - name: mixer-grpc-json
              mountPath: /esp
          readinessProbe:
            exec:
              command: ["ls", "/esp/mixer-grpc.json"]
            periodSeconds: 1
